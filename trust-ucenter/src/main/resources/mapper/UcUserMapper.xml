<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.trust.ucenter.dao.UcUserMapper">
  <resultMap id="BaseResultMap" type="com.trust.ucenter.entity.UcUser">
    <constructor>
      <idArg column="user_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="nickname" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="phone" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="email" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="user_type" javaType="java.lang.Boolean" jdbcType="BIT" />
      <arg column="enable" javaType="java.lang.Boolean" jdbcType="BIT" />
      <arg column="password" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="certification" javaType="java.lang.Boolean" jdbcType="BIT" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    user_id, nickname, phone, email, user_type, enable, password, certification
  </sql>
  <select id="selectByExample" parameterType="com.trust.ucenter.entity.UcUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from uc_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from uc_user
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <select id="selectByPhone" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from uc_user
    where phone = #{phone,jdbcType=VARCHAR}
  </select>
  <select id="selectByNickname" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from uc_user
    where nickname = #{nickname,jdbcType=VARCHAR}
  </select>
  <select id="selectByLogin" parameterType="java.util.Map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from uc_user
    where (nickname = #{loginName,jdbcType=VARCHAR} OR phone = #{loginName,jdbcType=VARCHAR})
    <if test="password != null">
      and password = #{password,jdbcType=VARCHAR}
    </if>
  </select>
  <update id="uppassword" parameterType="java.util.Map">
    update uc_user set password = #{password,jdbcType=VARCHAR} where phone = #{phone,jdbcType=VARCHAR}
  </update>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from uc_user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.trust.ucenter.entity.UcUserExample">
    delete from uc_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.trust.ucenter.entity.UcUser">
    insert into uc_user (user_id, nickname, phone, 
      email, user_type, enable, password, 
      certification)
    values (#{userId,jdbcType=INTEGER}, #{nickname,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{userType,jdbcType=BIT}, #{enable,jdbcType=BIT}, #{password,jdbcType=VARCHAR}, 
      #{certification,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.trust.ucenter.entity.UcUser">
    insert into uc_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="nickname != null">
        nickname,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="userType != null">
        user_type,
      </if>
      <if test="enable != null">
        enable,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="certification != null">
        certification,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="userType != null">
        #{userType,jdbcType=BIT},
      </if>
      <if test="enable != null">
        #{enable,jdbcType=BIT},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="certification != null">
        #{certification,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.trust.ucenter.entity.UcUserExample" resultType="java.lang.Integer">
    select count(*) from uc_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update uc_user
    <set>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.nickname != null">
        nickname = #{record.nickname,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.userType != null">
        user_type = #{record.userType,jdbcType=BIT},
      </if>
      <if test="record.enable != null">
        enable = #{record.enable,jdbcType=BIT},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.certification != null">
        certification = #{record.certification,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update uc_user
    set user_id = #{record.userId,jdbcType=INTEGER},
      nickname = #{record.nickname,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      user_type = #{record.userType,jdbcType=BIT},
      enable = #{record.enable,jdbcType=BIT},
      password = #{record.password,jdbcType=VARCHAR},
      certification = #{record.certification,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.trust.ucenter.entity.UcUser">
    update uc_user
    <set>
      <if test="nickname != null">
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="userType != null">
        user_type = #{userType,jdbcType=BIT},
      </if>
      <if test="enable != null">
        enable = #{enable,jdbcType=BIT},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="certification != null">
        certification = #{certification,jdbcType=BIT},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.trust.ucenter.entity.UcUser">
    update uc_user
    set nickname = #{nickname,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      user_type = #{userType,jdbcType=BIT},
      enable = #{enable,jdbcType=BIT},
      password = #{password,jdbcType=VARCHAR},
      certification = #{certification,jdbcType=BIT}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <insert id="insertProductUser" parameterType="java.util.Map">
    insert into uc_product_user(product_id,user_id)
    values (#{platformId,jdbcType=INTEGER},#{userId,jdbcType=INTEGER})
  </insert>
  <select id="myInfo" parameterType="java.lang.Integer" resultType="java.util.Map">
    select a.user_id userId,a.nickname,a.phone,COALESCE(b.realname_status,2) realnameStatus,
    COALESCE(a.head_photo) headPhoto
    from uc_user a left join uc_user_realname b on a.user_id = b.user_id
    where a.user_id = #{userId,jdbcType=INTEGER}
  </select>
  <select id="selectByUserQuery" parameterType="com.trust.ucenter.entity.UcUserQuery" resultType="java.util.Map">
    select a.user_id userId,a.nickname,a.phone,COALESCE(b.realname_status,2) realnameStatus,c.status userStatus,
    a.head_photo headPhoto,c.registry_time registryTime
    from uc_user a left join uc_user_realname b on a.user_id=b.user_id
    left join uc_product_user c on a.user_id = c.user_id
    where c.product_id=#{productId,jdbcType=INTEGER}
    <if test="nickname !=null and nickname!=''">
      and a.nickname LIKE concat('%',#{nickname,jdbcType=VARCHAR},'%')
    </if>
    <if test="phone !=null and phone !=''">
      and a.phone LIKE concat('%',#{phone,jdbcType=VARCHAR},'%')
    </if>
    <if test="userStatus !=null and userStatus !=99 ">
      and c.status =#{userStatus,jdbcType=INTEGER}
    </if>
  </select>

  <select id="userDetail" parameterType="com.trust.ucenter.entity.UcUserQuery" resultType="java.util.Map">
    select a.user_id userId,a.nickname,a.phone,COALESCE(b.realname_status,2) realnameStatus,c.status userStatus,
    a.head_photo headPhoto,c.registry_time registryTime
    from uc_user a left join uc_user_realname b on a.user_id=b.user_id
    left join uc_product_user c on a.user_id = c.user_id
    where c.product_id=#{productId,jdbcType=INTEGER} and a.user_id=#{userId,jdbcType=INTEGER}
  </select>

  <update id="upUserStatus" parameterType="java.util.Map">
    update uc_product_user set status=#{userStatus,jdbcType=INTEGER} where user_id=#{userId,jdbcType=INTEGER}
    and product_id=#{productId,jdbcType=INTEGER}
  </update>

  <select id="countByDate" resultType="java.lang.Integer" parameterType="java.util.Map">
    SELECT COUNT(a.user_id) user_count
    from uc_product_user a
    left join uc_user_realname b on a.user_Id=b.user_id
    where a.product_id=#{productId}
    <if test="realNameStatus != null ">
      and COALESCE(b.realname_status,2) = #{realNameStatus}
    </if>
    <if test="searchDate != null and searchType=='01'">
      and DATE_FORMAT(a.registry_time,'%Y-%m-%d') = #{searchDate}
    </if>
    <if test="searchDate != null and searchType=='02'">
      and DATE_FORMAT(a.registry_time,'%Y-%m') = #{searchDate}
    </if>

  </select>

  <update id="upHeadPhoto" parameterType="java.util.Map">
    update uc_user set head_photo = #{headPhoto} where user_id=#{userId}
  </update>
</mapper>