enviroment=${pom.enviroment}

#spring.profiles.active=dev

#tomcat port
server.port=8004
#临时文件上传路径
oss.bucketname= trust-dev-warehouse
oss.uploadpath= images/
oss.tempUpoladPath = /temp/images/crawlerlib/
######  db config start ######
#spring.datasource.driver-class=${pom.spring.datasource.driver}
#spring.datasource.url=${pom.spring.datasource.url}
#spring.datasource.username=${pom.spring.datasource.username}
#spring.datasource.password=${pom.spring.datasource.password}

#datasource.url=${pom.spring.datasource.url}
#datasource.driverClass=${pom.spring.datasource.driver}
#datasource.username=${pom.spring.datasource.username}
#datasource.password=${pom.spring.datasource.password}
datasource.url=jdbc:mysql://172.18.53.115:3310/trust-rnt?useUnicode=true&characterEncoding=utf-8&serverTimezone=UTC&useSSL=false
datasource.driverClass=com.mysql.jdbc.Driver
datasource.username=root
datasource.password=Rnt_@2018
datasource.maxActive=25
datasource.initialSize=1
datasource.maxWait=60000
datasource.minIdle=1
datasource.timeBetweenEvictionRunsMillis=3000
datasource.minEvictableIdleTimeMillis=300000
#datasource.validationQuery=SELECT 'x'
datasource.testWhileIdle=true
datasource.testOnBorrow=false
datasource.testOnReturn=false
datasource.filters=wall,stat
datasource.loginUsername=root
datasource.loginPassword=123456

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect
######  db config end ######

######  redis config start ######
spring.redis.host=172.18.53.115
#spring.redis.host=${pom.spring.redis.host}
## Redis数据库索引（默认为0）
spring.redis.database=1
#spring.redis.database=${pom.spring.redis.database}
## Redis服务器连接端口
#spring.redis.port=${pom.spring.redis.port}
spring.redis.port=8379

## Redis服务器连接密码（默认为空）
#spring.redis.password=${pom.spring.redis.password}
spring.redis.password=Trustrelease_2018

######  redis config end ######

####Thymeleaf start
spring.thymeleaf.enabled=true
spring.thymeleaf.cache=false
####Thymeleaf end
mybatis.mapper-locations=classpath:mapper/*/*.xml
mybatis.typeAliasesPackage=com.trust.entity
mybatis.config-location=classpath:mybatis-config.xml
mybatis.config-locations=classpath:mybatis-config.xml
spring.application.name=trust-rnt-co
security.user.name=trust
security.user.password=123456
#注册中心地址
#eureka.client.service-url.defaultZone=http://${security.user.name}:${security.user.password}@172.30.0.39:8761/eureka/
#eureka.client.service-url.defaultZone=http://eureka:8761/eureka/
eureka.client.service-url.defaultZone=http://172.18.53.115:8761/eureka/
eureka.instance.prefer-ip-address=true
#熔断器支持
feign.hystrix.enabled=true
# 第一种方式：将 hystrix 的超时时间设置成 5000 毫秒
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=5000
#把超时发生异常属性关闭
hystrix.command.default.execution.timeout.enabled=false
feign.httpclient.connection-timeout=5000
feign.compression.request.min-request-size=20
feign.httpclient.time-to-live=1000
#读取超时时间
ribbon.ReadTimeout=60000
#连接超时时间
ribbon.ConnectTimeout=60000

# 或者：
# 第二种方式：将 hystrix 的超时时间直接禁用掉，这样就没有超时的一说了，因为永远也不会超时了
# hystrix.command.default.execution.timeout.enabled: false
# 或者：
# 第三种方式：索性禁用feign的hystrix支持
# feign.hystrix.enabled: false ## 索性禁用feign的hystrix支持
#feign压缩
#feign.compression.request.mime-types=text/xml,application/xml,application/json
#feign.compression.request.min-request-size=2024
#feign日志级别
logging.level.com.trust.service.*=DEBUG

spring.thymeleaf.prefix=classpath:/templates
spring.thymeleaf.suffix=.html
spring.thymeleaf.mode=HTML5
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.content-type=text/html; charset=utf-8

#文件上传大小限制
spring.http.multipart.max-file-size=10Mb
spring.http.multipart.max-request-size=10Mb
